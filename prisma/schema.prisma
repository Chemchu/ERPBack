generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cierres {
  tpv_id                  String   @db.Uuid
  caja_inicial            Float    @db.Real
  caja_final              Float    @db.Real
  ventas_efectivo         Float    @db.Real
  ventas_tarjeta          Float    @db.Real
  dinero_esperado_en_caja Float    @db.Real
  dinero_real_en_caja     Float    @db.Real
  dinero_retirado_de_caja Float    @db.Real
  dinero_dejado_en_caja   Float    @db.Real
  fecha_apertura          DateTime @default(now()) @db.Timestamptz(6)
  fecha_cierre            DateTime @default(now()) @db.Timestamptz(6)
  id                      String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  tpvs                    tpvs     @relation(fields: [tpv_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model clientes {
  id               String             @id @db.Uuid
  nombre           String
  nif              String             @unique
  created_at       DateTime           @default(now()) @db.Timestamptz(6)
  direccion_id     String             @db.Uuid
  direcciones      direcciones        @relation(fields: [direccion_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  devoluciones     devoluciones[]
  ventas           ventas[]
  ventas_devueltas ventas_devueltas[]
}

model codigos_de_barra {
  ean_id              String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  producto_id         String                @db.Uuid
  ean                 String                @unique
  created_at          DateTime              @default(now()) @db.Timestamptz(6)
  productos           productos             @relation(fields: [producto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  productos_devueltos productos_devueltos[]
  productos_mermados  productos_mermados[]
  productos_vendidos  productos_vendidos[]
}

model devoluciones {
  id                  String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  venta_original_id   String                @db.Uuid
  dinero_devuelto     Float                 @db.Real
  tpv_id              String                @db.Uuid
  cliente_id          String?               @db.Uuid
  empleado_id         String                @db.Uuid
  created_at          DateTime              @default(now()) @db.Timestamptz(6)
  clientes            clientes?             @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  empleados           empleados             @relation(fields: [empleado_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tpvs                tpvs                  @relation(fields: [tpv_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ventas_devueltas    ventas_devueltas      @relation(fields: [venta_original_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  productos_devueltos productos_devueltos[]
  productos_mermados  productos_mermados[]
}

model direcciones {
  id            String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  calle         String
  codigo_postal String
  telefono      String?
  created_at    DateTime      @default(now()) @db.Timestamptz(6)
  clientes      clientes[]
  proveedores   proveedores[]
}

model empleados {
  nombre                              String
  apeliidos                           String
  email                               String             @unique
  dni                                 String             @unique
  rol                                 String             @default("CAJERO")
  created_at                          DateTime           @default(now()) @db.Timestamptz(6)
  id                                  String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  devoluciones                        devoluciones[]
  mermas                              mermas[]
  tpvs_tpvs_abierto_por_idToempleados tpvs[]             @relation("tpvs_abierto_por_idToempleados")
  tpvs_tpvs_usado_por_idToempleados   tpvs[]             @relation("tpvs_usado_por_idToempleados")
  ventas                              ventas[]
  ventas_devueltas                    ventas_devueltas[]
}

model mermas {
  id                String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  empleado_id       String    @db.Uuid
  coste_productos   Float     @db.Real
  ventas_perdidas   Float     @db.Real
  beneficio_perdido Float     @db.Real
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
  empleados         empleados @relation(fields: [empleado_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model productos {
  nombre              String                @unique
  familia             String?
  alta                Boolean               @default(true)
  cantidad            Int                   @default(0) @db.SmallInt
  created_at          DateTime              @default(now()) @db.Timestamptz(6)
  id                  String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  precio_compra       Float                 @db.Real
  precio_venta        Float                 @db.Real
  iva                 Float                 @db.Real
  margen              Float                 @db.Real
  proveedor_id        String?               @db.Uuid
  codigos_de_barra    codigos_de_barra[]
  proveedores         proveedores?          @relation(fields: [proveedor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  productos_devueltos productos_devueltos[]
  productos_mermados  productos_mermados[]
  productos_vendidos  productos_vendidos[]
}

model productos_devueltos {
  precio_compra     Float            @default(0) @db.Real
  precio_venta      Float            @default(0) @db.Real
  iva               Float            @default(10) @db.Real
  margen            Float            @default(0) @db.Real
  cantidad_devuelta Int              @default(0) @db.SmallInt
  created_at        DateTime         @default(now()) @db.Timestamptz(6)
  producto_id       String           @db.Uuid
  precio_final      Float            @db.Real
  codigo_de_barras  String           @db.Uuid
  proveedor_id      String?          @db.Uuid
  devolucion_id     String           @db.Uuid
  descuento         Float            @db.Real
  codigos_de_barra  codigos_de_barra @relation(fields: [codigo_de_barras], references: [ean_id], onDelete: NoAction, onUpdate: NoAction)
  devoluciones      devoluciones     @relation(fields: [devolucion_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  productos         productos        @relation(fields: [producto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  proveedores       proveedores?     @relation(fields: [proveedor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([producto_id, devolucion_id])
}

model productos_mermados {
  precio_compra       Float            @default(0) @db.Real
  precio_venta        Float            @default(0) @db.Real
  iva                 Float            @default(10) @db.Real
  margen              Float            @default(0) @db.Real
  cantidad_mermada    Int              @default(0) @db.SmallInt
  created_at          DateTime         @default(now()) @db.Timestamptz(6)
  producto_id         String           @db.Uuid
  codigo_de_barras_id String           @db.Uuid
  proveedor_id        String?          @db.Uuid
  merma_id            String           @db.Uuid
  motivo_merma        String
  codigos_de_barra    codigos_de_barra @relation(fields: [codigo_de_barras_id], references: [ean_id], onDelete: NoAction, onUpdate: NoAction)
  devoluciones        devoluciones     @relation(fields: [merma_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  productos           productos        @relation(fields: [producto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  proveedores         proveedores?     @relation(fields: [proveedor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([producto_id, merma_id])
}

model productos_vendidos {
  producto_id      String           @db.Uuid
  venta_id         String           @db.Uuid
  precio_compra    Float            @db.Real
  precio_venta     Float            @db.Real
  precio_final     Float            @db.Real
  cantidad_vendida Int
  descuento        Float            @db.Real
  iva              Float            @db.Real
  margen           Float            @db.Real
  created_at       DateTime         @default(now()) @db.Timestamptz(6)
  codigo_barras_id String           @db.Uuid
  proveedor_id     String?          @db.Uuid
  codigos_de_barra codigos_de_barra @relation(fields: [codigo_barras_id], references: [ean_id], onDelete: NoAction, onUpdate: NoAction)
  productos        productos        @relation(fields: [producto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  proveedores      proveedores?     @relation(fields: [proveedor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ventas           ventas           @relation(fields: [venta_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([producto_id, venta_id])
}

model proveedores {
  id                  String                @id @db.Uuid
  nombre              String                @unique
  cif                 String                @unique
  direccion           String                @db.Uuid
  created_at          DateTime              @default(now()) @db.Timestamptz(6)
  productos           productos[]
  productos_devueltos productos_devueltos[]
  productos_mermados  productos_mermados[]
  productos_vendidos  productos_vendidos[]
  direcciones         direcciones           @relation(fields: [direccion], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tpvs {
  id                                       String             @id @db.Uuid
  nombre                                   String             @unique
  libre                                    Boolean            @default(true)
  created_at                               DateTime           @default(now()) @db.Timestamptz(6)
  usado_por_id                             String?            @db.Uuid
  abierto_por_id                           String?            @db.Uuid
  caja_inicial                             Float              @db.Real
  cierres                                  cierres[]
  devoluciones                             devoluciones[]
  empleados_tpvs_abierto_por_idToempleados empleados?         @relation("tpvs_abierto_por_idToempleados", fields: [abierto_por_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  empleados_tpvs_usado_por_idToempleados   empleados?         @relation("tpvs_usado_por_idToempleados", fields: [usado_por_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ventas                                   ventas[]
  ventas_devueltas                         ventas_devueltas[]
}

model ventas {
  id                    String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  numero_factura        BigInt               @unique @default(autoincrement())
  dinero_efectivo       Float                @db.Real
  dinero_tarjeta        Float                @db.Real
  precio_venta_total    Float                @db.Real
  precio_venta_pagado   Float                @db.Real
  cambio                Float                @db.Real
  cliente_id            String?              @db.Uuid
  empleado_id           String               @db.Uuid
  tipo_pago             String               @default("EFECTIVO")
  descuento_sobre_total Float                @db.Real
  descuento_porcentaje  Float                @db.Real
  tpv_id                String               @db.Uuid
  created_at            DateTime             @default(now()) @db.Timestamptz(6)
  productos_vendidos    productos_vendidos[]
  clientes              clientes?            @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  empleados             empleados            @relation(fields: [empleado_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tpvs                  tpvs                 @relation(fields: [tpv_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ventas_devueltas {
  id                   String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  numero_factura       BigInt         @unique @default(autoincrement())
  dinero_efectivo      Float          @db.Real
  dinero_tarjeta       Float          @db.Real
  precio_venta_total   Float          @db.Real
  precio_venta_pagado  Float          @db.Real
  cambio               Float          @db.Real
  cliente_id           String?        @db.Uuid
  vendedor             String         @db.Uuid
  tipo_pago            String         @default("EFECTIVO")
  descuento_valor      Float          @db.Real
  descuento_porcentaje Float          @db.Real
  tpv_id               String         @db.Uuid
  created_at           DateTime       @default(now()) @db.Timestamptz(6)
  devoluciones         devoluciones[]
  clientes             clientes?      @relation(fields: [cliente_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tpvs                 tpvs           @relation(fields: [tpv_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  empleados            empleados      @relation(fields: [vendedor], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
